{"version":3,"sources":["logo.svg","Components/Navbar/Navbar.js","Components/Scrollbar/Scrollbar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","state","db","this","setState","JSON","parse","localStorage","getItem","console","log","readDB","allcost","allearn","ii","history","length","cost","howmany","Menu","pointing","secondary","id","style","lineHeight","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","cssEase","class","React","Component","Scrollbar","handleAddSubmit","e","target","checked","alert","push","parseInt","value","img","detail","description","writeDB","setOpen","window","location","reload","open","name","amount","setItem","stringify","val","Modal","onClose","onOpen","Header","Content","Form","onSubmit","Field","placeholder","Checkbox","label","Button","type","Grid","Row","Column","List","celled","map","item","text","Card","Image","floated","size","src","Meta","Description","Group","widths","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0570d059.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\nimport { Menu } from 'semantic-ui-react'\nimport Slider from \"react-slick\";\nclass Navbar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            db: {}\n        }\n    }\n    readDB() {\n\n        this.setState({\n            db: (JSON.parse(localStorage.getItem(\"freddy_db\")))\n        })\n        console.log(this.state.db)\n    }\n    componentWillMount() {\n        this.readDB()\n    }\n    render() {\n        var allcost = 0, allearn = 0, ii = 0;\n        for (ii = 0; ii < this.state.db.history.length; ii++) {\n            if (this.state.db.history[ii].cost) {\n                allcost += this.state.db.history[ii].howmany\n            }\n            else {\n                allearn += this.state.db.history[ii].howmany\n            }\n        }\n        const settings = {\n            dots: false,\n            infinite: true,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            autoplay: true,\n            speed: 4000,\n            autoplaySpeed: 4000,\n            cssEase: \"linear\"\n        };\n        return <div><Menu pointing secondary id='Navbar'>\n            <nav style={{\n                lineHeight: 0\n            }}>\n                <h1 id='title'>Freddy Money Report</h1>\n            </nav>\n        </Menu>\n            <div>\n                <Slider {...settings}>\n                    <div class='slide'>\n                        <h1>总支出：</h1>\n                        <h1>{allcost}</h1>\n                    </div>\n                    <div class='slide'>\n                        <h1>总收入：</h1>\n                        <h1>{allearn}</h1>\n                    </div>\n                    <div class='slide'>\n                        <h1>结余：</h1>\n                        <h1>{allearn-allcost}</h1>\n                    </div>\n                </Slider>\n            </div>\n        </div>\n    }\n}\nexport default Navbar;","import React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport { Card, Grid, Modal, Form, Checkbox, Image, List, Button } from 'semantic-ui-react';\n\nexport default class Scrollbar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false,\n            db: {\n                name: \"Freddy\",\n                amount: 0,\n                history: [{\n                    cost: true,\n                    howmany: 100,\n                    img: \"https://react.semantic-ui.com/images/avatar/large/steve.jpg\",\n                    detail: \"play\",\n                    description: \"play games\"\n                },\n                {\n                    cost: true,\n                    howmany: 100,\n                    img: \"https://react.semantic-ui.com/images/avatar/large/steve.jpg\",\n                    detail: \"play\",\n                    description: \"play games\"\n                }]\n            }\n        }\n    }\n    readDB() {\n        \n        this.setState({\n            db: (JSON.parse(localStorage.getItem(\"freddy_db\")))\n        })\n        console.log(this.state.db)\n    }\n\n    writeDB() {\n        localStorage.setItem(\"freddy_db\", JSON.stringify(this.state.db))\n    }\n\n    setOpen(val) {\n        this.setState({\n            open: val\n        })\n    }\n    handleAddSubmit = (e) => {\n        console.log(e)\n        if ((e.target[1].checked && e.target[2].checked) || !(e.target[1].checked || e.target[2].checked)) {\n            alert(\"You must select ONE option!\")\n            return\n        } else {\n            this.state.db.history.push({\n                cost: e.target[1].checked,\n                howmany: parseInt(e.target[0].value),\n                img: \"https://react.semantic-ui.com/images/avatar/large/steve.jpg\",\n                detail: e.target[3].value,\n                description: e.target[4].value\n            })\n            this.writeDB()\n            this.setOpen(false)\n            window.location.reload(false)\n        }\n    }\n\n    componentDidMount () {\n        this.readDB()\n    }\n\n    render() {\n        console.log(1)\n        console.log(this.state.db)\n        console.log(1)\n        const settings = {\n            dots: false,\n            infinite: true,\n            slidesToShow: 12,\n            slidesToScroll: 1,\n            vertical: true,\n            verticalSwiping: true,\n            beforeChange: function (currentSlide, nextSlide) {\n                console.log(\"before change\", currentSlide, nextSlide);\n            },\n            afterChange: function (currentSlide) {\n                console.log(\"after change\", currentSlide);\n            },\n            data: this.state.db\n        };\n        console.log(this.state.db)\n\n\n        return (\n            <div>\n                <Modal\n                    onClose={() => this.setOpen(false)}\n                    onOpen={() => this.setOpen(true)}\n                    open={this.state.open}>\n                    <Modal.Header>add a new thing</Modal.Header>\n                    <Modal.Content>\n                        <div>\n                            <Form onSubmit={this.handleAddSubmit}>\n                                <Form.Field>\n                                    <label>Howmany</label>\n                                    <input placeholder='Howmany' />\n                                </Form.Field>\n                                <Form.Field>\n                                    <Checkbox label='Cost' />\n                                    <Checkbox label='Earn' />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Why</label>\n                                    <input placeholder='Why' />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Description</label>\n                                    <input placeholder='Description' />\n                                </Form.Field>\n                                <Button type='submit'>Submit</Button>\n\n                            </Form>\n                        </div>\n                    </Modal.Content>\n                </Modal>\n                <Grid.Row id=\"sc-row\">\n                    <Grid.Column>\n                        <List celled>\n                            {/* <Card>\n                                <Card.Content>\n                                    <Image\n                                        floated='right'\n                                        size='mini'\n                                        src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\n                                    />\n                                    <Card.Header>Steve Sanders</Card.Header>\n                                    <Card.Meta>Friends of Elliot</Card.Meta>\n                                    <Card.Description>\n                                        Steve wants to add you to the group <strong>best friends</strong>\n                                    </Card.Description>\n                                </Card.Content>\n                            </Card> */}\n                            {this.state.db.history.map((item) => {\n                                if (item.cost) {\n                                    var text = \"Cost:\" + item.howmany\n                                }\n                                else {\n                                    var text = \"Earn:\" + item.howmany\n                                }\n                                return <Card>\n                                    <Card.Content>\n                                        <Image\n                                            floated='right'\n                                            size='mini'\n                                            src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\n                                        />\n                                        <Card.Header>{text}</Card.Header>\n                                        <Card.Meta>{item.detail}</Card.Meta>\n                                        <Card.Description>{item.description}</Card.Description>\n                                    </Card.Content>\n                                </Card>\n                            })}\n                        </List>\n                    </Grid.Column>\n                </Grid.Row>\n                <Button.Group widths='100%' id='buttons'>\n                    <Button class=\"button\">One</Button>\n                    <Button  class=\"button\" onClick={() => this.setOpen(true)}>Add</Button>\n                    <Button class=\"button\">Three</Button>\n                </Button.Group>\n            </div>\n        );\n    }\n}","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar'\nimport 'semantic-ui-css/semantic.min.css'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Scrollbar from './Components/Scrollbar/Scrollbar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <Scrollbar></Scrollbar>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}